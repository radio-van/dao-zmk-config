/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};


/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};


/*   0  1  2  3  4  5    6  7  8  9 10 11
 *  12 13 14 15 16 17   18 19 20 21 22 23
 *  24 25 26 27 28 29   30 31 32 33 34 35
 *           36 37 38   39 40 41
 */

/ {
    combos {
        compatible = "zmk,combos";
        combo_bkspc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp BACKSPACE>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&macro_ent>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&kp ESC>;
        };
    };
};


/ {
    macros {
        macro_trans_kp: macro_trans_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>, <&macro_tap &kp MACRO_PLACEHOLDER>;
        };
        macro_trans: macro_trans {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &trans>;
        };

        macro_ent: macro_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp ENTER>;
        };
        macro_par: macro_par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
        };
        macro_brak: macro_brak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
        };
        macro_brac: macro_brac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
        };

        macro_qts: macro_qts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SQT &kp SQT &kp LEFT>;
        };
        macro_grave_double: macro_grave_double {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp GRAVE &kp LEFT>;
        };
        macro_grave_tripple: macro_grave_tripple {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
        };
    };
};


/ {
    behaviors {
        // hold - some key
        // tap - some other key
        ht_s: hold_tap_simple {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        // hold - momentary layer (1st arg)
        // tap - one-shot (aka sticky) modifier (2nd arg)
        ht_ml: hold_tap_mod_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <100>;
            bindings = <&mo>, <&sk>;
        };
        // tap - toggle one layer
        // hold - select another layer
        ht_ll: hold_tap_layers {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <100>;
            bindings = <&mo>, <&tog>;
        };

        // hold - sym
        // tap - one-shot shift
        // doble-tap - toggle sym layer
        // tripple-tap - default layer
        td_sym: tap_dance_sym {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_ml 1 LSHIFT>, <&tog 1>, <&to DEF>;
        };
        // hold - nav
        // tap - one-shot ctrl
        // doble-tap - toggle nav layer
        // tripple-tap - default layer
        td_nav: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_ml 2 LCTRL>, <&tog 2>, <&to DEF>;
        };
        // tap - toggle SYM
        // hold - NAV
        // double-tap - DEFAULT
        td_sn: tap_dance_sym_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_ll 2 1>, <&to DEF>;
        };
        td_cl: tap_dance_col {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp COLON>, <&macro_par>;
        };
        td_sqt: tap_dance_sqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&macro_qts>, <&kp LEFT_BRACKET>;
        };
        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&macro_grave_double>;
        };
        td_pipe: tap_dance_pipe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BACKSLASH>, <&kp PIPE>, <&kp RIGHT_BRACKET>;
        };
        td_tilda: tap_dance_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TILDE>, <&macro_grave_tripple>;
        };
        td_esc: tap_dance_escape {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp U>, <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&td_grave     &kp Q   &kp W   &kp E                 &kp R            &kp T                 &kp Y     &td_esc     &kp I       &kp O     &kp P      &ht_s UNDER MINUS
&td_tilda     &kp A   &kp S   &mt LCTRL D           &mt LSHIFT F     &mt LGUI G            &kp H     &kp J       &kp K       &kp L     &td_cl     &td_sqt
&kp LC(SPC)   &kp Z   &kp X   &kp C                 &kp V            &kp B                 &kp N     &kp M       &kp COMMA   &kp DOT   &kp FSLH   &td_pipe
                                      &mt LEFT_ALT INSERT        &sk LCTRL      &mt LSHIFT SPACE     &td_sn      &td_nav     &kp LC(B)
            >;
        };

        lower_layer {
            bindings = <
&macro_par   &kp EXCL      &kp AT_SIGN    &kp HASH      &kp DOLLAR   &kp PERCENT  &kp CARET     &kp AMPS  &kp ASTERISK  &kp LPAR  &kp RPAR   &kp MINUS
&macro_brac  &kp N1        &kp N2         &kp N3        &kp N4       &kp N5       &kp N6        &kp N7    &kp N8        &kp N9    &kp N0     &kp EQUAL
&macro_brak  &macro_trans  &kp LBRC       &kp RBRC      &kp LBKT     &kp RBKT     &kp LT        &kp GT    &kp COMMA     &kp DOT   &trans     &kp PLUS
                                          &macro_trans  &macro_trans &macro_trans &to DEF       &to DEF   &macro_trans
            >;
        };

        raise_layer {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6       &kp HOME       &kp END      &none   &none      &none  &none
&kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12      &kp LEFT       &kp DOWN     &kp UP  &kp RIGHT  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR   &kp PAGE_DOWN  &kp PAGE_UP  &none   &none      &none  &none
                                          &macro_trans  &macro_trans  &macro_trans &to DEF        &to DEF      &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
