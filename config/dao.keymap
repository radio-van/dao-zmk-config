/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};


/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};


/*   0  1  2  3  4  5    6  7  8  9 10 11
 *  12 13 14 15 16 17   18 19 20 21 22 23
 *  24 25 26 27 28 29   30 31 32 33 34 35
 *           36 37 38   39 40 41
 */

/ {
    combos {
        compatible = "zmk,combos";
        combo_bkspc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp BACKSPACE>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&macro_ent>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&macro_esc>;
        };
        combo_spc {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&macro_spc >;
        };
        // , .
        combo_comma {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp COMMA>;
        };
        combo_dot {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp DOT>;
        };
        // ? >>
        combo_question {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp QMARK>;
        };
        combo_shift {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&macro_sft>;
        };
        // () {} []
        combo_par {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&macro_par>;
        };
        combo_brac {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&macro_brac>;
        };
        combo_brak {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&macro_brak>;
        };
    };
};


/ {
    macros {
        macro_trans_kp: macro_trans_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>, <&macro_tap &kp MACRO_PLACEHOLDER>;
        };
        macro_trans: macro_trans {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &trans>;
        };

        macro_spc: macro_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp SPACE>;
        };
        macro_ent: macro_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp ENTER>;
        };
        macro_esc: macro_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp ESC>;
        };
        //, <&macro_pause_for_release>
        macro_dbl: macro_double_single_param {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                ;
        };
        macro_dbl_2: macro_double_diff_params {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                ;
        };
        macro_par: macro_par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
        };
        macro_brak: macro_brak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
        };
        macro_brac: macro_brac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
        };

        macro_qts: macro_qts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SQT &kp SQT &kp LEFT>;
        };
        macro_grave_double: macro_grave_double {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp GRAVE &kp LEFT>;
        };
        macro_grave_tripple: macro_grave_tripple {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
        };
        macro_tilda: macro_tilda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp TILDE &kp TILDE &kp TILDE &kp TILDE &kp LEFT &kp LEFT>;
        };
        macro_tmux: macro_tmux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B) &kp LBKT>;
        };
        macro_sft: macro_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GT &kp GT>;
        };
    };
};


/ {
    behaviors {
        // hold - some key
        // tap - some other key
        ht_s: hold_tap_simple {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        // hold - double key and place cursor between
        // tap - some key
        ht_dbl: hold_tap_double {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&macro_dbl>, <&kp>;
        };
        // hold - momentary layer (1st arg)
        // tap - one-shot (aka sticky) modifier (2nd arg)
        //ht_ml: hold_tap_mod_layer {
        //    compatible = "zmk,behavior-hold-tap";
        //    #binding-cells = <2>;
        //    flavor = "hold-preferred";
        //    tapping-term-ms = <100>;
        //    bindings = <&mo>, <&sk>;
        //};
        // tap - toggle one layer
        // hold - select another layer
        //ht_mo_tog: hold_tap_layers_mo_tog {
        //    compatible = "zmk,behavior-hold-tap";
        //    #binding-cells = <2>;
        //    flavor = "hold-preferred";
        //    tapping-term-ms = <100>;
        //    bindings = <&mo>, <&tog>;
        //};
        // tap - sticky layer: active until other key is pressed
        // hold - momentary layer: active while being held
        ht_mo_sl: hold_tap_layers_mo_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <50>;
            bindings = <&mo>, <&sl>;
        };

        // hold - sym
        // tap - one-shot shift
        // doble-tap - toggle sym layer
        // tripple-tap - default layer
        //td_sym: tap_dance_sym {
        //    compatible = "zmk,behavior-tap-dance";
        //    #binding-cells = <0>;
        //    tapping-term-ms = <200>;
        //    bindings = <&ht_ml 1 LSHIFT>, <&tog 1>, <&to DEF>;
        //};

        ht_tmux: hold_tap_tmux {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&macro_tmux>, <&kp>;
        };

        // hold - sym
        // tap - sticky sym
        // doble-tap - toggle sym
        // tripple-tap - default layer
        td_sym: tap_dance_sym {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_mo_sl 1 1>, <&tog 1>, <&to DEF>;
        };
        // hold - nav
        // tap - sticky nav
        // doble-tap - toggle nav
        // tripple-tap - default layer
        td_nav: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_mo_sl 2 2>, <&tog 2>, <&to DEF>;
        };

        td_cl: tap_dance_col {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp COLON>, <&macro_par>;
        };
        td_0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N0>, <&kp COLON>, <&kp SEMI>;
        };
        td_sqt: tap_dance_sqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&macro_dbl SQT>, <&kp LEFT_BRACKET>;
        };
        td_dqt: tap_dance_dqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DQT>, <&macro_dbl DQT>, <&kp LEFT_BRACKET>;
        };
        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&macro_grave_double>, <&macro_grave_tripple>;
        };
        td_pipe: tap_dance_pipe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PIPE>, <&kp BACKSLASH>, <&kp RIGHT_BRACKET>;
        };
        td_tilda: tap_dance_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TILDE>, <&macro_tilda>;
        };
        // td_f_esc: tap_dance_escape {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <400>;
        //     bindings = <&mt LSHIFT F>, <&kp ESC>;
        // };
        td_r_grave: tap_dance_r_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp R>, <&macro_grave_double>;
        };
        td_y_tilda: tap_dance_y_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp Y>, <&kp TILDE>;
        };
        td_i_minus: tap_dance_i_minus {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp I>, <&kp MINUS>;
        };
        td_m_under: tap_dance_m_under {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp M>, <&kp UNDER>;
        };
        td_b_tilda: tap_dance_b_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp B>, <&macro_grave_double>, <&macro_grave_tripple>;
        };
        // tap dance brackets
        td_par: tap_dance_par {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RPAR>, <&macro_par>, <&kp LPAR>;
        };
        td_bkt: tap_dance_bkt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBKT>, <&macro_brak >, <&kp LBKT>;
        };
        td_brc: tap_dance_brc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBRC>, <&macro_brac >, <&kp LBRC>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&td_grave   &kp Q   &kp W   &kp E        &kp R         &kp T             &kp Y      &kp U        &td_i_minus  &kp O     &kp P     &kp RBKT
&kp LC(B)   &kp A   &kp S   &mt LCTRL D  &mt LSHIFT F  &mt LGUI G        &kp H      &kp J        &kp K        &kp L     &td_cl    &kp MINUS
&kp INSERT  &kp Z   &kp X   &kp C        &kp V         &td_b_tilda       &kp N      &td_m_under  &kp COMMA    &kp DOT   &kp FSLH  &td_pipe
                    &mt LEFT_ALT LC(B)   &sk LCTRL     &sk LSHIFT        &kp SPACE  &td_nav      &td_sym
            >;
        };

        lower_layer {
            bindings = <
&macro_par   &kp EXCL   &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT      &kp CARET   &kp AMPS   &kp ASTERISK  &kp EQUAL  &kp PLUS   &none
&macro_brac  &kp N1     &kp N2       &kp N3     &kp N4      &kp N5           &kp N6      &kp N7     &kp N8        &kp N9     &td_0      &none
&macro_brak  &none      &none        &none      &td_brc     &td_bkt          &td_par     &kp UNDER  &kp COMMA     &kp DOT    &kp MINUS  &none
                                     &td_grave  &td_sqt     &td_dqt          &macro_spc  &td_tilda  &kp INSERT
            >;
        };

        raise_layer {
            bindings = <
&bt BT_SEL 0  &kp F1  &kp F2  &kp F3        &kp F4        &kp F5              &kp HOME       &kp END      &none   &none      &none  &none
&bt BT_SEL 1  &kp F6  &kp F7  &kp F8        &kp F9        &kp F12             &kp LEFT       &kp DOWN     &kp UP  &kp RIGHT  &none  &none
&bt BT_SEL 2  &none   &none   &none         &none         &bt BT_CLR          &kp PAGE_DOWN  &kp PAGE_UP  &none   &none      &none  &none
                              &macro_trans  &macro_trans  &macro_trans        &to DEF        &to DEF      &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
